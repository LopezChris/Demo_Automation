---
- name: Create AWS EC2 Instance
  hosts: localhost
  connection: local
  gather_facts: false
  pre_tasks:
    - include_vars: variables.yml
  tasks: 
    - name: Create Security Group in {{ ec2_region }}
      ec2_group:
        name: "{{ ec2_security_group }}"
        description: Demo security group
        region: "{{ ec2_region }}"
        rules: # rules for incoming connections to ec2
          - proto: all
            from_port: 0 # add port for ssh
            to_port: 65535
            cidr_ip: 0.0.0.0/0
      register: security_group
    - name: Provision {{ ec2_count }} instance(s) with tag {{ ec2_tag_Role }}
      ec2:
        key_name: "{{ ec2_keypair }}" # aws keypair name of file
        group: "{{ ec2_security_group }}"
        instance_type: "{{ ec2_instance_type }}" # change if need bigger machine
        image: "{{ ec2_image }}" # Ubuntu Server 18.04 LTS (HVM), SSD Volume Type
        region: "{{ ec2_region }}"
        instance_tags: '{"Type":"{{ec2_instance_type}}", "Role":"{{ec2_tag_Role}}"}'
        wait: true
        exact_count: "{{ ec2_count }}" # change if want to launch more instances
        count_tag:
            Role: "{{ ec2_tag_Role }}" # jmedel_ansible_cmpe
        volumes:
          - device_name: /dev/sda1
            volume_type: gp2
            volume_size: "{{ ec2_volume_size }}"
            delete_on_termination: true 
      register: ec2

    - name: Add all instance public IPs to host group
      add_host: 
        hostname: "{{ item.public_ip }}"
        groups: tag_Type_{{ec2_tag_Type}} 
        ec2_region: "{{ ec2_region }}"
        ec2_tag_Type: "{{ ec2_tag_Type }}"
        ec2_tag_Role: "{{ ec2_tag_Role }}"
        ec2_ip_address: "{{ item.public_ip }}"
      with_items: "{{ ec2.instances }}"

    - name: Wait for the instances to boot by checking the ssh port
      wait_for: host={{ item.public_ip }} port=22 delay=60 timeout=320 state=started
      with_items: "{{ ec2.instances }}"